const mongoose = require('mongoose');
const connectDB = require('../config/database');

const checkDatabase = async () => {
  try {
    await connectDB();
    
    console.log('üîç V√©rification de la base de donn√©es...\n');
    
    // Lister toutes les collections
    const collections = await mongoose.connection.db.listCollections().toArray();
    
    if (collections.length === 0) {
      console.log('üìã Aucune collection trouv√©e. Les collections seront cr√©√©es automatiquement lors de la premi√®re utilisation.\n');
      
      console.log('üìö Collections qui seront cr√©√©es :');
      console.log('  ‚Ä¢ users - Tous les utilisateurs (admin, professeurs, √©tudiants)');
      console.log('  ‚Ä¢ students - Profils d√©taill√©s des √©tudiants');
      console.log('  ‚Ä¢ professors - Profils d√©taill√©s des professeurs');
      console.log('  ‚Ä¢ courses - Planification des cours');
      console.log('  ‚Ä¢ events - √âv√©nements universitaires');
      console.log('  ‚Ä¢ certificates - Demandes d\'attestations\n');
      
      console.log('üí° Pour cr√©er des donn√©es de test, ex√©cutez : npm run seed');
    } else {
      console.log('üìã Collections existantes :');
      for (const collection of collections) {
        const count = await mongoose.connection.db.collection(collection.name).countDocuments();
        console.log(`  ‚Ä¢ ${collection.name} - ${count} documents`);
      }
    }
    
    console.log('\n‚úÖ Base de donn√©es pr√™te !');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification :', error);
    process.exit(1);
  }
};

// Ex√©cuter si appel√© directement
if (require.main === module) {
  checkDatabase();
}

module.exports = checkDatabase;